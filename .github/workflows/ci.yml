name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - {
            name: "Windows Latest MSVC",
            os: windows-latest,
            build_type: "Release",
            cc: "cl",
            cxx: "cl",
            generators: "Visual Studio 17 2022"
          }
          - {
            name: "Ubuntu Latest GCC",
            os: ubuntu-latest,
            build_type: "Release",
            cc: "gcc",
            cxx: "g++",
            generators: "Ninja"
          }
          - {
            name: "macOS Latest Clang",
            os: macos-latest,
            build_type: "Release",
            cc: "clang",
            cxx: "clang++",
            generators: "Ninja"
          }

    steps:
      - uses: actions/checkout@v2

      - name: Install dependencies (Ubuntu)
        if: startsWith(matrix.config.os, 'ubuntu')
        run: |
          sudo apt-get update
          sudo apt-get install -y ninja-build libssl-dev libsqlite3-dev

      - name: Install dependencies (macOS)
        if: startsWith(matrix.config.os, 'macos')
        run: |
          brew install ninja openssl sqlite3

      - name: Install dependencies (Windows)
        if: startsWith(matrix.config.os, 'windows')
        run: |
          choco install ninja openssl sqlite

      - name: Configure CMake
        shell: bash
        env:
          CC: ${{ matrix.config.cc }}
          CXX: ${{ matrix.config.cxx }}
        run: |
          mkdir -p build
          cd build
          cmake .. -G "${{ matrix.config.generators }}" \
                 -DCMAKE_BUILD_TYPE=${{ matrix.config.build_type }} \
                 -DBUILD_TESTING=ON

      - name: Build
        shell: bash
        run: |
          cd build
          cmake --build . --config ${{ matrix.config.build_type }}

      - name: Test
        shell: bash
        run: |
          cd build
          ctest -C ${{ matrix.config.build_type }} -V

  security-analysis:
    name: Security Analysis
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v2
      
      - name: Install CodeQL
        uses: github/codeql-action/init@v1
        with:
          languages: cpp
      
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v1 